using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace binary_to_decimal
{
    class Decimall
    {
        
    }
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Welcome to my little converter programme.\nPls choose a mode:\n0 - Binary to Decimal\n1 - Decimal to Binary");

            switch (Console.ReadKey(true).KeyChar)
            {
                case '0':
                    goto btc;
                case '1':
                    goto dtb;
            }

            btc:
            // binary to decimal
            int x = 1;
            int dec_num = 0;
            int dec_sum = 0;

            Console.WriteLine("Pls enter a binary number.");

            string binaris = Console.ReadLine();
            byte binaris_hossz = (byte)binaris.Length;
            byte y = binaris_hossz;
            int[,] binaris_tomb = new int[binaris_hossz, 2];

            for (byte j = 0 ; j <= (byte)(binaris_hossz - 1); j++) //binarisok
            {
                    binaris_tomb[j,0] = int.Parse(binaris[--y].ToString());
                    //Console.WriteLine(binaris_tomb[j, 0]);
                    for (byte k = 0; k < 1 ; k++) //hatvanyok
                    {
                        binaris_tomb[j, 1] = x;
                        x *= 2;
                    //Console.WriteLine(binaris_tomb[j, 1]);
                    }
            }

            for (byte j = 0; j <= (byte)(binaris_hossz-1); j++)
            {
                dec_num = binaris_tomb[j, 0] * binaris_tomb[j, 1];
                dec_sum += dec_num;
            }

            Console.WriteLine("Decimal number: {0}", dec_sum);
            Console.ReadKey();
            goto end;

            // decimal to binary
            dtb:
            int ln_bin_oszto = 1;
            byte bin = 0;
            
            Console.WriteLine("Pls enter a decimal number.");
            string dec_num2 = Console.ReadLine();
            int maradek = int.Parse(dec_num2);

            for (int z = 1; z <= int.Parse(dec_num2); z *= 2)
            {
                if (int.Parse(dec_num2) / z >= 1)
                {
                    ln_bin_oszto = z;
                    bin += 1;
                }
                else
                {
                    break;
                }
            }
            //binaris osztok
            int[] bin_array = new int[bin];
            byte bin2 = bin;

            for (byte z = 0; z < bin; z++)
            {
                bin_array[--bin2] = ln_bin_oszto;
                ln_bin_oszto /= 2;
                //Console.WriteLine("{0}\n", bin_array[bin2]);
            }
            //binaris szamok
            byte bin3 = bin;
            byte[] bin_array2 = new byte[bin];
            Console.Write("Binary number: ");

            for (byte z = 0; z < bin; z++)
            {
                if (maradek / bin_array[--bin3] >= 1)
                {
                    bin_array2[bin3] = 1;
                    maradek -= bin_array[bin3];
                    Console.Write(bin_array2[bin3]);
                }
                else
                {
                    bin_array2[bin3] = 0;
                    Console.Write(bin_array2[bin3]);
                }
            }
            end:
            Console.ReadKey();
        }
    }
}
